/*
@title: Platformer_Game
@author: Adya
@tags: []
@addedOn: 2024-31-07
*/

const player = "p";
const platform = "x";
const path = "y";
const goal = "g";
const enemy = "e";
const powerUp = "u";

setLegend(
  [ player, bitmap`
................
................
................
.......0........
.....00.000.....
....0.....00....
....0.0.0..0....
....0......0....
....0......0....
....00....0.....
......00000.....
......0...0.....
....000...000...
................
................
................`],
  [ platform, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`],
  [ path, bitmap`
DDDDDDDDDDDDDDDD
D0000DDD000DDDDD
D00DDDDDD000DDDD
D0DDDDDDDDD000DD
DD0DDD0DDD00000D
DDD0D000DDD0000D
D0DDD000DDD0000D
D0DDDDD0D0D0000D
D0DD0DDD00D0000D
D0DD0DDD0DD0000D
D00DDDDDD0D0000D
D000DDDDD0D0000D
D000DDDDD0D0000D
D000000DDDDDD00D
D00000000D000DDD
DDDDDDDDDDDDDDDD`],
  [ goal, bitmap`
................
................
................
....444444......
...44....44.....
...4......4.....
...4.......4....
...4.......4....
...4.......4....
...44......4....
....4......4....
....44....44....
.....444444.....
................
................
................`],
  [ enemy, bitmap`
................
................
................
....111111......
...11....11.....
...1......1.....
...1.......1....
...1.......1....
...1.......1....
...11......1....
....1......1....
....11....11....
.....111111.....
................
................
................`],
  [ powerUp, bitmap`
................
................
................
....222222......
...22....22.....
...2......2.....
...2.......2....
...2.......2....
...2.......2....
...22......2....
....2......2....
....22....22....
.....222222.....
................
................
................`]
);

let level = 0;

const levels = [
  map`
p............
........y....
yyy....yyy...
...yy.yyyy..y
.....e.......
..........yy.
.yyy.yyyyy...
.............
..yyy..y.yyyy
.....y.......
......y......
......yyyyg..
xxxxxxxxxxxxx`,
  map`
p............
..y..........
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy..g..
xxxxxxxxxxxxx`,
  map`
p............
........y....
yyy....yyy...
...yy.yyyy..y
.....e.......
..........yy.
.yyy.yyyyy...
.............
..yyy..y.yyyy
.....y.......
......y......
......yyyyg..
xxxxxxxxxxxxx`,
  map`
p............
..y..........
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy.....
..y..yyy..g..
xxxxxxxxxxxxx`,
  map`
p............
........y....
yyy....yyy...
...yy.yyyy..y
.....e.......
..........yy.
.yyy.yyyyy...
.............
..yyy..y.yyyy
.....y.......
......y......
......yyyyg..
xxxxxxxxxxxxx`
];

const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, platform, path ]);

setPushables({
  [ player ]: []
});

onInput("w", () => {
  getFirst(player).y -= 1; // Jump
});

onInput("a", () => {
  getFirst(player).x -= 1; // Move left
});

onInput("d", () => {
  getFirst(player).x += 1; // Move right
});

setInterval(() => {
  const p = getFirst(player);
  if (p && !getTile(p.x, p.y + 1).some(t => t.type === platform)) {
    p.y += 1; // Apply gravity
  }
}, 100);

afterInput(() => {
  const p = getFirst(player);
  if (p && getTile(p.x, p.y).some(t => t.type === goal)) {
    level += 1;
    const currentLevel = levels[level];
    if (currentLevel !== undefined) setMap(currentLevel);
  }
});